name: Deploy API to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Export environment variables
        run: |
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
          echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> $GITHUB_ENV
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV
          echo "SEEDER_EMAIL=${{ secrets.SEEDER_EMAIL }}" >> $GITHUB_ENV
          echo "SEEDER_PASSWORD=${{ secrets.SEEDER_PASSWORD }}" >> $GITHUB_ENV
          echo "SEEDER_PHONENUMBER=${{ secrets.SEEDER_PHONENUMBER }}" >> $GITHUB_ENV
          echo "WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }}" >> $GITHUB_ENV
          echo "RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}" >> $GITHUB_ENV
          echo "RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}" >> $GITHUB_ENV
          echo "MapMyIndiaAPIKey=${{ secrets.MapMyIndiaAPIKey }}" >> $GITHUB_ENV
          echo "MAPPLS_CLIENT_ID=${{ secrets.MAPPLS_CLIENT_ID }}" >> $GITHUB_ENV
          echo "MAPPLS_CLIENT_SECRET=${{ secrets.MAPPLS_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
          echo "AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN }}" >> $GITHUB_ENV
          echo "PROJECT_ID=${{ secrets.PROJECT_ID }}" >> $GITHUB_ENV
          echo "STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }}" >> $GITHUB_ENV
          echo "MESSAGING_SENDER_ID=${{ secrets.MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
          echo "APP_ID=${{ secrets.APP_ID }}" >> $GITHUB_ENV
          echo "MEASUREMENT_ID=${{ secrets.MEASUREMENT_ID }}" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker buildx build \
            --build-arg PORT=$PORT \
            --build-arg MONGO_URL=$MONGO_URL \
            --build-arg JWT_SECRET_KEY=$JWT_SECRET_KEY \
            --build-arg SEEDER_EMAIL=$SEEDER_EMAIL \
            --build-arg SEEDER_PASSWORD=$SEEDER_PASSWORD \
            --build-arg SEEDER_PHONENUMBER=$SEEDER_PHONENUMBER \
            --build-arg WEBHOOK_SECRET=$WEBHOOK_SECRET \
            --build-arg RAZORPAY_KEY_ID=$RAZORPAY_KEY_ID \
            --build-arg RAZORPAY_KEY_SECRET=$RAZORPAY_KEY_SECRET \
            --build-arg MapMyIndiaAPIKey=$MapMyIndiaAPIKey \
            --build-arg MAPPLS_CLIENT_ID=$MAPPLS_CLIENT_ID \
            --build-arg MAPPLS_CLIENT_SECRET=$MAPPLS_CLIENT_SECRET \
            --build-arg API_KEY=$API_KEY \
            --build-arg AUTH_DOMAIN=$AUTH_DOMAIN \
            --build-arg PROJECT_ID=$PROJECT_ID \
            --build-arg STORAGE_BUCKET=$STORAGE_BUCKET \
            --build-arg MESSAGING_SENDER_ID=$MESSAGING_SENDER_ID \
            --build-arg APP_ID=$APP_ID \
            --build-arg MEASUREMENT_ID=$MEASUREMENT_ID \
            --platform linux/amd64 \
            -t myfamto/famto-api:latest \
            --push .

      - name: Deploy to DigitalOcean Droplet via SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            docker stop famto-api
            docker rm e famto-api
            docker run -d \
            --restart always \
            --name  famto-api\
             registry.digitalocean.com/famto/famto-api:$(echo $GITHUB_SHA | head -c7)
