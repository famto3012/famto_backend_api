name: Deploy API to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .env file
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "SEEDER_EMAIL=${{ secrets.SEEDER_EMAIL }}" >> .env
          echo "SEEDER_PASSWORD=${{ secrets.SEEDER_PASSWORD }}" >> .env
          echo "SEEDER_PHONENUMBER=${{ secrets.SEEDER_PHONENUMBER }}" >> .env
          echo "WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }}" >> .env
          echo "RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}" >> .env
          echo "RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}" >> .env
          echo "MapMyIndiaAPIKey=${{ secrets.MapMyIndiaAPIKey }}" >> .env
          echo "MAPPLS_CLIENT_ID=${{ secrets.MAPPLS_CLIENT_ID }}" >> .env
          echo "MAPPLS_CLIENT_SECRET=${{ secrets.MAPPLS_CLIENT_SECRET }}" >> .env
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN }}" >> .env
          echo "PROJECT_ID=${{ secrets.PROJECT_ID }}" >> .env
          echo "STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }}" >> .env
          echo "MESSAGING_SENDER_ID=${{ secrets.MESSAGING_SENDER_ID }}" >> .env
          echo "APP_ID=${{ secrets.APP_ID }}" >> .env
          echo "MEASUREMENT_ID=${{ secrets.MEASUREMENT_ID }}" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker buildx build \
            --env-file .env \
            -t myfamto/famto-api:latest .
          docker push myfamto/famto-api:latest

      - name: Deploy to DigitalOcean Droplet via SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull myfamto/famto-api:latest
            docker stop famto_api_container || true
            docker rm famto_api_container || true
            docker run -d --name famto_api_container \
              -p 80:5000 \
              --env-file .env \
              myfamto/famto-api:latest
